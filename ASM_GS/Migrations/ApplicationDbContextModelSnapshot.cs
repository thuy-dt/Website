// <auto-generated />
using System;
using ASM_GS.Controllers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASM_GS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASM_GS.Models.AnhSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UrlAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaSanPham");

                    b.ToTable("AnhSanPhams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaSanPham = "SP001",
                            UrlAnh = "img/AnhSanPham/kemduongam1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            MaSanPham = "SP001",
                            UrlAnh = "img/AnhSanPham/kemduongam2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            MaSanPham = "SP001",
                            UrlAnh = "img/AnhSanPham/kemduongam3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            MaSanPham = "SP001",
                            UrlAnh = "img/AnhSanPham/kemduongam4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            MaSanPham = "SP002",
                            UrlAnh = "img/AnhSanPham/suaruamat1.jpg"
                        },
                        new
                        {
                            Id = 6,
                            MaSanPham = "SP002",
                            UrlAnh = "img/AnhSanPham/suaruamat2.jpg"
                        },
                        new
                        {
                            Id = 7,
                            MaSanPham = "SP002",
                            UrlAnh = "img/AnhSanPham/suaruamat3.jpg"
                        },
                        new
                        {
                            Id = 8,
                            MaSanPham = "SP002",
                            UrlAnh = "img/AnhSanPham/suaruamat4.jpg"
                        },
                        new
                        {
                            Id = 9,
                            MaSanPham = "SP003",
                            UrlAnh = "img/AnhSanPham/toner1.png"
                        },
                        new
                        {
                            Id = 10,
                            MaSanPham = "SP003",
                            UrlAnh = "img/AnhSanPham/toner2.png"
                        },
                        new
                        {
                            Id = 11,
                            MaSanPham = "SP003",
                            UrlAnh = "img/AnhSanPham/toner3.png"
                        },
                        new
                        {
                            Id = 12,
                            MaSanPham = "SP003",
                            UrlAnh = "img/AnhSanPham/toner4.png"
                        },
                        new
                        {
                            Id = 13,
                            MaSanPham = "SP004",
                            UrlAnh = "img/AnhSanPham/serumtrang1.jpg"
                        },
                        new
                        {
                            Id = 14,
                            MaSanPham = "SP004",
                            UrlAnh = "img/AnhSanPham/serumtrang2.jpg"
                        },
                        new
                        {
                            Id = 15,
                            MaSanPham = "SP004",
                            UrlAnh = "img/AnhSanPham/serumtrang3.jpg"
                        },
                        new
                        {
                            Id = 16,
                            MaSanPham = "SP004",
                            UrlAnh = "img/AnhSanPham/serumtrang4.jpg"
                        },
                        new
                        {
                            Id = 17,
                            MaSanPham = "SP005",
                            UrlAnh = "img/AnhSanPham/mark1.jpg"
                        },
                        new
                        {
                            Id = 18,
                            MaSanPham = "SP005",
                            UrlAnh = "img/AnhSanPham/mark2.jpg"
                        },
                        new
                        {
                            Id = 19,
                            MaSanPham = "SP005",
                            UrlAnh = "img/AnhSanPham/mark3.jpg"
                        },
                        new
                        {
                            Id = 20,
                            MaSanPham = "SP005",
                            UrlAnh = "img/AnhSanPham/mark4.jpg"
                        },
                        new
                        {
                            Id = 21,
                            MaSanPham = "SP006",
                            UrlAnh = "img/AnhSanPham/kcn1.jpg"
                        },
                        new
                        {
                            Id = 22,
                            MaSanPham = "SP006",
                            UrlAnh = "img/AnhSanPham/kcn2.jpg"
                        },
                        new
                        {
                            Id = 23,
                            MaSanPham = "SP006",
                            UrlAnh = "img/AnhSanPham/kcn3.jpg"
                        },
                        new
                        {
                            Id = 24,
                            MaSanPham = "SP006",
                            UrlAnh = "img/AnhSanPham/kcn4.jpg"
                        },
                        new
                        {
                            Id = 25,
                            MaSanPham = "SP007",
                            UrlAnh = "img/AnhSanPham/taytrang1.jpg"
                        },
                        new
                        {
                            Id = 26,
                            MaSanPham = "SP007",
                            UrlAnh = "img/AnhSanPham/taytrang2.jpg"
                        },
                        new
                        {
                            Id = 27,
                            MaSanPham = "SP007",
                            UrlAnh = "img/AnhSanPham/taytrang3.jpg"
                        },
                        new
                        {
                            Id = 28,
                            MaSanPham = "SP007",
                            UrlAnh = "img/AnhSanPham/taytrang4.jpg"
                        },
                        new
                        {
                            Id = 29,
                            MaSanPham = "SP008",
                            UrlAnh = "img/AnhSanPham/tinhchat1.jpg"
                        },
                        new
                        {
                            Id = 30,
                            MaSanPham = "SP008",
                            UrlAnh = "img/AnhSanPham/tinhchat2.jpg"
                        },
                        new
                        {
                            Id = 31,
                            MaSanPham = "SP008",
                            UrlAnh = "img/AnhSanPham/tinhchat3.jpg"
                        },
                        new
                        {
                            Id = 32,
                            MaSanPham = "SP008",
                            UrlAnh = "img/AnhSanPham/tinhchat4.jpg"
                        },
                        new
                        {
                            Id = 33,
                            MaSanPham = "SP009",
                            UrlAnh = "img/AnhSanPham/xitkhoang1.jpg"
                        },
                        new
                        {
                            Id = 34,
                            MaSanPham = "SP009",
                            UrlAnh = "img/AnhSanPham/xitkhoang2.jpg"
                        },
                        new
                        {
                            Id = 35,
                            MaSanPham = "SP009",
                            UrlAnh = "img/AnhSanPham/xitkhoang3.jpg"
                        },
                        new
                        {
                            Id = 36,
                            MaSanPham = "SP009",
                            UrlAnh = "img/AnhSanPham/xitkhoang4.jpg"
                        },
                        new
                        {
                            Id = 37,
                            MaSanPham = "SP010",
                            UrlAnh = "img/AnhSanPham/bandem1.jpg"
                        },
                        new
                        {
                            Id = 38,
                            MaSanPham = "SP010",
                            UrlAnh = "img/AnhSanPham/bandem2.jpg"
                        },
                        new
                        {
                            Id = 39,
                            MaSanPham = "SP010",
                            UrlAnh = "img/AnhSanPham/bandem3.jpg"
                        },
                        new
                        {
                            Id = 40,
                            MaSanPham = "SP010",
                            UrlAnh = "img/AnhSanPham/bandem4.jpg"
                        });
                });

            modelBuilder.Entity("ASM_GS.Models.ChiTietCombo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaCombo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaCombo");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietCombos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaCombo = "CB001",
                            MaSanPham = "SP001",
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 2,
                            MaCombo = "CB001",
                            MaSanPham = "SP005",
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 3,
                            MaCombo = "CB001",
                            MaSanPham = "SP006",
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 4,
                            MaCombo = "CB002",
                            MaSanPham = "SP002",
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 5,
                            MaCombo = "CB002",
                            MaSanPham = "SP003",
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 6,
                            MaCombo = "CB002",
                            MaSanPham = "SP004",
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 7,
                            MaCombo = "CB002",
                            MaSanPham = "SP010",
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 8,
                            MaCombo = "CB003",
                            MaSanPham = "SP008",
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 9,
                            MaCombo = "CB003",
                            MaSanPham = "SP007",
                            SoLuong = 1
                        },
                        new
                        {
                            Id = 10,
                            MaCombo = "CB003",
                            MaSanPham = "SP009",
                            SoLuong = 1
                        });
                });

            modelBuilder.Entity("ASM_GS.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaChiTietDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietDonHang"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaCombo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaComboNavigationMaCombo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDonHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDonHangNavigationMaDonHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanPhamNavigationMaSanPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietDonHang");

                    b.HasIndex("MaComboNavigationMaCombo");

                    b.HasIndex("MaDonHangNavigationMaDonHang");

                    b.HasIndex("MaSanPhamNavigationMaSanPham");

                    b.ToTable("ChiTietDonHangs");
                });

            modelBuilder.Entity("ASM_GS.Models.Combo", b =>
                {
                    b.Property<string>("MaCombo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCombo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaCombo");

                    b.ToTable("Combos");

                    b.HasData(
                        new
                        {
                            MaCombo = "CB001",
                            Anh = "img/AnhCombo/z5959105369727_62f7dd6336f7577e1dd7ee873b52f574.jpg",
                            Gia = 800000m,
                            MoTa = "Combo gồm các sản phẩm dưỡng ẩm",
                            TenCombo = "Combo Dưỡng Ẩm",
                            TrangThai = 1
                        },
                        new
                        {
                            MaCombo = "CB002",
                            Anh = "img/AnhCombo/z5959105369727_62f7dd6336f7577e1dd7ee873b52f574.jpg",
                            Gia = 1200000m,
                            MoTa = "Combo chăm sóc da toàn diện",
                            TenCombo = "Combo Chăm Sóc Da",
                            TrangThai = 1
                        },
                        new
                        {
                            MaCombo = "CB003",
                            Anh = "img/AnhCombo/z5959105369727_62f7dd6336f7577e1dd7ee873b52f574.jpg",
                            Gia = 950000m,
                            MoTa = "Combo sản phẩm ngừa mụn hiệu quả",
                            TenCombo = "Combo Ngừa Mụn",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("ASM_GS.Models.DanhGia", b =>
                {
                    b.Property<string>("MaDanhGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhachHangNavigationMaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanPhamNavigationMaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoSao")
                        .HasColumnType("int");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("MaKhachHangNavigationMaKhachHang");

                    b.HasIndex("MaSanPhamNavigationMaSanPham");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("ASM_GS.Models.DanhMuc", b =>
                {
                    b.Property<string>("MaDanhMuc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaDanhMuc");

                    b.ToTable("DanhMucs");

                    b.HasData(
                        new
                        {
                            MaDanhMuc = "DM001",
                            TenDanhMuc = "Dưỡng da",
                            TrangThai = 1
                        },
                        new
                        {
                            MaDanhMuc = "DM002",
                            TenDanhMuc = "Chống nắng",
                            TrangThai = 1
                        },
                        new
                        {
                            MaDanhMuc = "DM003",
                            TenDanhMuc = "Làm sạch",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("ASM_GS.Models.DonHang", b =>
                {
                    b.Property<string>("MaDonHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhachHangNavigationMaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("NgayDatHang")
                        .HasColumnType("date");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaDonHang");

                    b.HasIndex("MaKhachHangNavigationMaKhachHang");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("ASM_GS.Models.GiamGia", b =>
                {
                    b.Property<string>("MaGiamGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("GiaTri")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("NgayBatDau")
                        .HasColumnType("date");

                    b.Property<DateOnly>("NgayKetThuc")
                        .HasColumnType("date");

                    b.Property<int>("SoLuongMaNhapToiDa")
                        .HasColumnType("int");

                    b.Property<string>("TenGiamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaGiamGia");

                    b.ToTable("GiamGia");

                    b.HasData(
                        new
                        {
                            MaGiamGia = "CP001",
                            GiaTri = 0.25m,
                            NgayBatDau = new DateOnly(2025, 6, 1),
                            NgayKetThuc = new DateOnly(2025, 6, 30),
                            SoLuongMaNhapToiDa = 100,
                            TenGiamGia = "Giảm giá mùa hè",
                            TrangThai = 1
                        },
                        new
                        {
                            MaGiamGia = "CP002",
                            GiaTri = 0.15m,
                            NgayBatDau = new DateOnly(2025, 12, 20),
                            NgayKetThuc = new DateOnly(2025, 12, 25),
                            SoLuongMaNhapToiDa = 100,
                            TenGiamGia = "Giảm giá Noel",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("ASM_GS.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaGiamGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("NgayXuatHoaDon")
                        .HasColumnType("date");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaGiamGia");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("ASM_GS.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cccd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("NgayDangKy")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KhachHangs");

                    b.HasData(
                        new
                        {
                            MaKhachHang = "KH001",
                            Cccd = "123456789",
                            DiaChi = "123 Main St",
                            GioiTinh = true,
                            NgayDangKy = new DateOnly(2023, 1, 15),
                            NgaySinh = new DateOnly(1990, 1, 1),
                            SoDienThoai = "0123456789",
                            TenKhachHang = "Embo",
                            TrangThai = 1
                        },
                        new
                        {
                            MaKhachHang = "KH002",
                            Cccd = "987654321",
                            DiaChi = "456 Elm St",
                            GioiTinh = false,
                            NgayDangKy = new DateOnly(2023, 1, 16),
                            NgaySinh = new DateOnly(1992, 2, 2),
                            SoDienThoai = "0987654321",
                            TenKhachHang = "Ember",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("ASM_GS.Models.MaNhapGiamGia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("MaGiamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaGiamGia");

                    b.ToTable("MaNhapGiamGia");
                });

            modelBuilder.Entity("ASM_GS.Models.NhanVien", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cccd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("NgayBatDau")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("NhanViens");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "NV001",
                            Cccd = "123456789",
                            DiaChi = "123 Main St",
                            GioiTinh = true,
                            NgayBatDau = new DateOnly(2023, 1, 15),
                            NgaySinh = new DateOnly(1990, 1, 1),
                            SoDienThoai = "0123456789",
                            TenNhanVien = "Admin",
                            TrangThai = 1,
                            VaiTro = "Admin"
                        });
                });

            modelBuilder.Entity("ASM_GS.Models.SanPham", b =>
                {
                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DonVi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("Hsd")
                        .HasColumnType("date");

                    b.Property<string>("MaDanhMuc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("NgayThem")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("Nsx")
                        .HasColumnType("date");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaSanPham");

                    b.HasIndex("MaDanhMuc");

                    b.ToTable("SanPhams");

                    b.HasData(
                        new
                        {
                            MaSanPham = "SP001",
                            Gia = 300000m,
                            MaDanhMuc = "DM001",
                            SoLuong = 100,
                            TenSanPham = "Kem dưỡng ẩm",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP002",
                            Gia = 200000m,
                            MaDanhMuc = "DM003",
                            SoLuong = 150,
                            TenSanPham = "Sữa rửa mặt",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP003",
                            Gia = 250000m,
                            MaDanhMuc = "DM001",
                            SoLuong = 120,
                            TenSanPham = "Nước hoa hồng",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP004",
                            Gia = 500000m,
                            MaDanhMuc = "DM001",
                            SoLuong = 80,
                            TenSanPham = "Serum dưỡng trắng",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP005",
                            Gia = 150000m,
                            MaDanhMuc = "DM001",
                            SoLuong = 200,
                            TenSanPham = "Mặt nạ cấp ẩm",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP006",
                            Gia = 350000m,
                            MaDanhMuc = "DM002",
                            SoLuong = 90,
                            TenSanPham = "Kem chống nắng",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP007",
                            Gia = 180000m,
                            MaDanhMuc = "DM003",
                            SoLuong = 110,
                            TenSanPham = "Tẩy trang",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP008",
                            Gia = 400000m,
                            MaDanhMuc = "DM001",
                            SoLuong = 70,
                            TenSanPham = "Tinh chất ngừa mụn",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP009",
                            Gia = 220000m,
                            MaDanhMuc = "DM002",
                            SoLuong = 90,
                            TenSanPham = "Xịt khoáng",
                            TrangThai = 1
                        },
                        new
                        {
                            MaSanPham = "SP010",
                            Gia = 450000m,
                            MaDanhMuc = "DM001",
                            SoLuong = 50,
                            TenSanPham = "Kem dưỡng da ban đêm",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("ASM_GS.Models.TaiKhoan", b =>
                {
                    b.Property<string>("MaTaiKhoan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVienNavigationMaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiKhoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTaiKhoan");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaNhanVienNavigationMaNhanVien");

                    b.ToTable("TaiKhoans");

                    b.HasData(
                        new
                        {
                            MaTaiKhoan = "TK003",
                            Email = "admin@example.com",
                            MaNhanVien = "NV001",
                            MatKhau = "123456",
                            TenTaiKhoan = "admin",
                            TinhTrang = 0,
                            VaiTro = "Admin"
                        },
                        new
                        {
                            MaTaiKhoan = "TK001",
                            Email = "customer1@example.com",
                            MaKhachHang = "KH001",
                            MatKhau = "123",
                            TenTaiKhoan = "customer1",
                            TinhTrang = 0,
                            VaiTro = "Customer"
                        },
                        new
                        {
                            MaTaiKhoan = "TK002",
                            Email = "customer2@example.com",
                            MaKhachHang = "KH002",
                            MatKhau = "123",
                            TenTaiKhoan = "customer2",
                            TinhTrang = 0,
                            VaiTro = "Customer"
                        });
                });

            modelBuilder.Entity("ChiTietGioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaCombo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaGioHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaCombo");

                    b.HasIndex("MaGioHang");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietGioHangs");
                });

            modelBuilder.Entity("ChiTietHoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaCombo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaCombo");

                    b.HasIndex("MaHoaDon");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietHoaDons");
                });

            modelBuilder.Entity("GioHang", b =>
                {
                    b.Property<string>("MaGioHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("NgayTao")
                        .HasColumnType("date");

                    b.HasKey("MaGioHang");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("ASM_GS.Models.AnhSanPham", b =>
                {
                    b.HasOne("ASM_GS.Models.SanPham", "MaSanPhamNavigation")
                        .WithMany("AnhSanPhams")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaSanPhamNavigation");
                });

            modelBuilder.Entity("ASM_GS.Models.ChiTietCombo", b =>
                {
                    b.HasOne("ASM_GS.Models.Combo", "MaComboNavigation")
                        .WithMany("ChiTietCombos")
                        .HasForeignKey("MaCombo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASM_GS.Models.SanPham", "MaSanPhamNavigation")
                        .WithMany("ChiTietCombos")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaComboNavigation");

                    b.Navigation("MaSanPhamNavigation");
                });

            modelBuilder.Entity("ASM_GS.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("ASM_GS.Models.Combo", "MaComboNavigation")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaComboNavigationMaCombo");

                    b.HasOne("ASM_GS.Models.DonHang", "MaDonHangNavigation")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaDonHangNavigationMaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASM_GS.Models.SanPham", "MaSanPhamNavigation")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaSanPhamNavigationMaSanPham");

                    b.Navigation("MaComboNavigation");

                    b.Navigation("MaDonHangNavigation");

                    b.Navigation("MaSanPhamNavigation");
                });

            modelBuilder.Entity("ASM_GS.Models.DanhGia", b =>
                {
                    b.HasOne("ASM_GS.Models.KhachHang", "MaKhachHangNavigation")
                        .WithMany("DanhGia")
                        .HasForeignKey("MaKhachHangNavigationMaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASM_GS.Models.SanPham", "MaSanPhamNavigation")
                        .WithMany("DanhGia")
                        .HasForeignKey("MaSanPhamNavigationMaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaKhachHangNavigation");

                    b.Navigation("MaSanPhamNavigation");
                });

            modelBuilder.Entity("ASM_GS.Models.DonHang", b =>
                {
                    b.HasOne("ASM_GS.Models.KhachHang", "MaKhachHangNavigation")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaKhachHangNavigationMaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaKhachHangNavigation");
                });

            modelBuilder.Entity("ASM_GS.Models.HoaDon", b =>
                {
                    b.HasOne("ASM_GS.Models.GiamGia", "MaGiamGiaNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaGiamGia")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ASM_GS.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKhachHang");

                    b.Navigation("KhachHang");

                    b.Navigation("MaGiamGiaNavigation");
                });

            modelBuilder.Entity("ASM_GS.Models.MaNhapGiamGia", b =>
                {
                    b.HasOne("ASM_GS.Models.GiamGia", "GiamGia")
                        .WithMany("MaNhapGiamGias")
                        .HasForeignKey("MaGiamGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiamGia");
                });

            modelBuilder.Entity("ASM_GS.Models.SanPham", b =>
                {
                    b.HasOne("ASM_GS.Models.DanhMuc", "MaDanhMucNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaDanhMuc");

                    b.Navigation("MaDanhMucNavigation");
                });

            modelBuilder.Entity("ASM_GS.Models.TaiKhoan", b =>
                {
                    b.HasOne("ASM_GS.Models.KhachHang", "MaKhachHangNavigation")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("MaKhachHang");

                    b.HasOne("ASM_GS.Models.NhanVien", "MaNhanVienNavigation")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("MaNhanVienNavigationMaNhanVien");

                    b.Navigation("MaKhachHangNavigation");

                    b.Navigation("MaNhanVienNavigation");
                });

            modelBuilder.Entity("ChiTietGioHang", b =>
                {
                    b.HasOne("ASM_GS.Models.Combo", "Combo")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("MaCombo");

                    b.HasOne("GioHang", "GioHang")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("MaGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASM_GS.Models.SanPham", "SanPham")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("GioHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ChiTietHoaDon", b =>
                {
                    b.HasOne("ASM_GS.Models.Combo", "Combo")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaCombo");

                    b.HasOne("ASM_GS.Models.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASM_GS.Models.SanPham", "SanPham")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaSanPham");

                    b.Navigation("Combo");

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("GioHang", b =>
                {
                    b.HasOne("ASM_GS.Models.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("MaKhachHang");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("ASM_GS.Models.Combo", b =>
                {
                    b.Navigation("ChiTietCombos");

                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ChiTietGioHangs");

                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("ASM_GS.Models.DanhMuc", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("ASM_GS.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("ASM_GS.Models.GiamGia", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("MaNhapGiamGias");
                });

            modelBuilder.Entity("ASM_GS.Models.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("ASM_GS.Models.KhachHang", b =>
                {
                    b.Navigation("DanhGia");

                    b.Navigation("DonHangs");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");

                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("ASM_GS.Models.NhanVien", b =>
                {
                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("ASM_GS.Models.SanPham", b =>
                {
                    b.Navigation("AnhSanPhams");

                    b.Navigation("ChiTietCombos");

                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ChiTietGioHangs");

                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("DanhGia");
                });

            modelBuilder.Entity("GioHang", b =>
                {
                    b.Navigation("ChiTietGioHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
